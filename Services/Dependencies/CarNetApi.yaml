openapi: 3.0.0
info:
  description: >-
    CarNET API provides you with the ability to detect a carâ€™s make, model, generation and color from an image of the car. Supports detection of more than 3100 car generations.
  version: "2.1"
  title: 'CarNET vehicle make, model and generation recognition API'
  contact:
    email: k+api@carnet.ai
    url: https://carnet.ai
paths:
  /detect:
    post:
      summary: Detects and recognizes vehicles in photo
      operationId: detect
      description: Detects and recognizes vehicle in photo
      responses:
        '200':
          description: Image was successfully processed by API
          headers:
            X-Rate-Limit-Limit:
              schema:
                type: integer
              description: Request limit per second
            X-Rate-Limit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window          
            X-Rate-Limit-Reset:
              schema:
                type: integer
              description: Timestamp at which the current rate limit window resets     
            X-Quota-Limit:
              schema:
                type: integer
              description: Request quota per hour
            X-Quota-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window          
            X-Quota-Reset:
              schema:
                type: integer
              description: Timestamp at which the current quota window resets     
          content:
            application/json:
              schema:
                type: object
                properties:
                  is_success:
                    type: boolean
                    description: Specifies if uploaded image was processed successfuly. Refer to error property if value equals to __false__
                  error: 
                    type: object
                    properties:
                      code:
                        type: integer
                        enum: [2, 3, 4, 5, 7, 8, 12, 14, 15]
                        description: |
                          - 2 - internal exception
                          - 3 - image file size is too large
                          - 4 - empty image
                          - 5 - image dimentions are too large
                          - 7 - unsupported image format
                          - 8 - failed to decode image
                          - 12 - unsupported parameters
                          - 14 - multiple files provided
                          - 15 - unsupported parameter values
                      message:
                        type: string
                        description: Contains error description                          
                    description: Describes error details if image processing failed
                  detections:
                    type: array
                    description: Array of car bounding boxes detected within the image
                    items: 
                      type: object
                      properties:
                        box:
                          type: object
                          description: Describes bounding box coordinates using top left and bottom right corners
                          properties:
                            br_x:
                              type: number
                              format: float
                              minimum: 0
                              maximum: 1
                              description: X-coordinate of the bottom right corner
                            br_y:
                              type: number
                              format: float
                              minimum: 0
                              maximum: 1                              
                              description: Y-coordinate of the bottom right corner                 
                            tl_x:
                              type: number
                              format: float
                              minimum: 0
                              maximum: 1                              
                              description: X-coordinate of the top left corner
                            tl_y:
                              type: number
                              format: float
                              minimum: 0
                              maximum: 1                              
                              description: Y-coordinate of the top left corner
                        class:
                          type: object
                          properties:
                            name:
                              type: string
                              enum:
                                - car
                                - truck
                                - bus
                              description: "Class name. Can be: car, truck or bus"
                            probability:
                              type: number
                              format: float
                              minimum: 0
                              maximum: 1                              
                          description: Describes class of the object detected in the bounding box
                        subclass:
                          description: Describes sub-class of the object detected in the bounding box
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                                enum:
                                  - vehicle
                                  - interior
                                  - dashboard
                                  - wheel
                                  - body part
                                  - unidentifiable
                              probability:
                                type: number
                                format: flaot
                                minimum: 0
                                maximum: 1                                
                        status:
                          type: object
                          description: Describes status of bounding box processing result. Code property equals 0 if bounding box has been process successfully or contains code which describes processing results
                          properties:
                            code: 
                              type: integer
                              enum: [0, 22, 23, 24, 25, 26, 31]
                              description: |
                                Possible values are:
                                
                                - 0 - content of bounding box was successfully processed
                                - 22 - Bounding box was skipped. Width is %d which is less than box_min_width %d
                                - 23 - Bounding box was skipped. Height is %d which is less than box_min_height %d
                                - 24 - Bounding box was skipped. Width/Height ratio is %f which is less than box_min_ratio %f
                                - 25 - Bounding box was skipped. Width/Height ratio is %f which is greater than box_max_ratio %f
                                - 26 - Bounding box was skipped. Box is closer to the image edge than box_offset %d
                                - 31 - Bounding box was skipped. Box was not selected according to the currently active selection strategy: %s
                            selected:
                              type: boolean
                              description: Specifies if bounding box was selected for further processing
                            message:
                              type: string
                              description: Contains explanation for code value if it does not equal 0
                        mm:
                          description: Contains TOP-3 detected car models. Only models with probability >= 0.01 are listed
                          type: array
                          items:
                            type: object
                            properties:
                              make_id:
                                type: integer
                              make_name:
                                type: string
                              model_id:
                                type: integer
                              model_name:
                                type: string
                              probability:
                                type: number
                                format: float
                                minimum: 0
                                maximum: 1                                
                        mmg:
                          type: array
                          description: Contains TOP-3 detected car generations. Only generations with probability >= 0.01 are listed                          
                          items:
                            type: object
                            properties:
                              make_id:
                                type: integer
                              make_name:
                                type: string
                              model_id:
                                type: integer
                              model_name:
                                type: string
                              generation_id:
                                type: integer
                              generation_name:
                                type: string
                              years:
                                type: string
                              probability:
                                type: number
                                format: float      
                                minimum: 0
                                maximum: 1                                
                        color:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                              name:
                                type: string
                              probability:
                                type: number
                                format: float
                                minimum: 0
                                maximum: 1                                
                          description: | 
                            Contains TOP-3 detected colors. Only colors with probability >= 0.01 are listed. Supported colors are:
                            
                            - Beige (id = 63)                            
                            - Black (id = 70)                            
                            - Blue (id = 72)                            
                            - Brown (id = 74)                            
                            - Gold (id = 64)                            
                            - Green (id = 66)
                            - Grey (id = 68)                            
                            - Light blue (id = 71)                            
                            - Orange (id = 76)                            
                            - Pink (id = 78)                            
                            - Purple (id = 73)                            
                            - Red (id = 67)                            
                            - Silver (id = 77)                            
                            - Violet (id = 75)                            
                            - White (id = 65)                            
                            - Yellow (id = 69)
                        angle:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                                enum:
                                  - front
                                  - front-left
                                  - left
                                  - back-left
                                  - back
                                  - back-right
                                  - right
                                  - front-right
                              probability:
                                type: number
                                format: float
                                minimum: 0
                                maximum: 1
                          description: |
                            Contains TOP-3 car positions. Only positions with probability >= 0.01 are listed. Supported positions are:
                            
                            - front
                            - front-left
                            - left
                            - back-left
                            - back
                            - back-right
                            - right
                            - front-right
                  meta:
                    type: object
                    properties:
                      classifier:
                        type: integer
                        description: ID of the classifier used to detect car's model
                      md5:
                        type: string
                        description: MD5 hash of the uploaded image
                      parameters:
                        type: object
                        description: Lists values of parameters to process image
                        properties:
                          box_max_ratio:
                            type: number
                            format: float
                          box_min_height:
                            type: integer
                          box_min_ratio:
                            type: number
                            format: float
                          box_min_width:
                            type: number
                          box_offset:
                            type: number
                          box_select:
                            type: string
                            enum: 
                              - all
                              - center
                              - largest
                          features:
                            type: array
                            items:
                              type: string
                              enum:
                                - mm
                                - mmg
                                - color
                                - angle
                          region:
                            type: array
                            items: 
                              type: string
                              enum:
                                - CIS
                                - DEF                                
                                - EU
                                - NA
                      time:
                        type: number
                        format: float
                        description: Time spent processing the image in seconds
        '401':
          description: Unauthorized access. You have to provide valid 'api-key' header to access API
        '429':
          description: Rate limit exceeded
      parameters: 
        - in: query
          name: box_offset
          schema:
            type: integer
            default: 0
            minimum: 0
          description: Minimum allowed distance in pixels between the edge of the image and the edge of the car's bounding box. 
          required: false   
        - in: query
          name: box_min_width
          schema:
            type: integer
            default: 180
            minimum: 180
          description: Minimum allowed width in pixels of the car's bounding box
          required: false   
        - in: query
          name: box_min_height
          schema:
            type: integer
            default: 180
            minimum: 180
          description: Minimum allowed height in pixels of the car's bounding box
          required: false
        - in: query
          name: box_min_ratio
          schema:
            type: number
            format: float
            default: 1.0
          description: Minimum allowed ratio between car's bounding box width and height.
          required: false
        - in: query
          name: box_max_ratio
          schema:
            type: number
            format: float
            default: 3.15
          description: Maximum allowed ratio between car's bounding box width and height.
          required: false
        - in: query
          name: box_select
          schema:
            type: string
            enum:
              - all
              - center
              - largest
            default: center
          description: | 
            Sets bounding box selection strategy. Only selected boxes are used to run car model recognition algorithms
            
            - **all** - images within all bounding boxes will be processed
            - **center** - the bounding box closest to the center of the image will be processed
            - **largest** - the bounding box with the largest area will be processed
          required: false
        - in: query
          name: features
          schema:
            type: array
            items:
              type: string
              enum:
                - mm
                - mmg
                - color
                - angle
              default: mmg
          explode: false
          required: false
          description: |
            Defines what features you would like to extract from the image. 
            
            - **mm** - car model, which also reflects car make
            - **mmg** - car generation, which also reflects car model and make 
            - **color** - car body color
            - **angle** - car angle
            
            Note: **mm** and **mmg** options are mutually exclusive. You should use mm option if you aim to detect car model, and mmg option if you want to get more granular results, including car generation (production years).
        - in: query
          name: region
          schema:
            type: string
            enum:
              - CIS
              - DEF
              - EU
              - NA
            default: DEF
          required: false
          description: |
            Including region parameter will lead to prioritizing most common brands in the region over those rarely
            encountered. While this option helps to produce stronger recognition results for the most common brands and models in the region, rare car brands and models are likely to be incorrectly recognized
          
            Regions currently supported:
            
            - CIS - Commonwealth of Independent States
            - EU - European Union
            - NA - North America
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        description: Image file to process
servers:
  - url: 'https://api.carnet.ai/v2/mmg'
security:
  - ApiKeyAuth: []  
components:
  securitySchemes:
    ApiKeyAuth:        
      type: apiKey
      in: header       
      name: api-key